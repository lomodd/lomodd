{"version":3,"sources":["logo.svg","Table.js","Form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TableHeader","react_default","a","createElement","TableBody","props","rows","data","map","val","index","key","name","job","onClick","removeRecord","Table","_this$props","this","Table_TableHeader","Table_TableBody","Component","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_event$target","target","value","setState","defineProperty","submitForm","handleSubmit","state","console","log","_this$state","action","type","onChange","App","filter","row","i","people","toConsumableArray","concat","className","src_Table","src_Form","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2b1f2942.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\n\nconst TableHeader = () =>{\n\treturn (\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<td>id7</td>\n\t\t\t\t<td>date</td>\n\t\t\t\t<td>amount</td>\n\t\t\t</tr>\n\t\t</thead>\n\t);\n};\n\nconst TableBody = props =>{\n\tconst rows = props.data.map((val,index)=>{\n\t\treturn (\n\t\t\t<tr key={index}>\n\t\t\t\t<td>{val.name}</td>\n\t\t\t\t<td>{val.job}</td>\n\t\t\t\t<td><button onClick={()=>props.removeRecord(index)}>Delete</button></td>\n\t\t\t</tr>\n\t\t);\n\t});\n\n\treturn <tbody>{rows}</tbody>;\n};\n\nclass Table extends Component{\n\trender(){\n\t\tconst { data ,removeRecord} = this.props;\n\t\t//debugger\n\t\treturn(\n\t\t\t<table>\n\t\t\t\t<TableHeader/>\n\t\t\t\t<TableBody data={data} removeRecord={removeRecord}/>\n\t\t\t</table>\n\n\t\t);\n\t}\n}\n\nexport default Table;","import React,{Component} from 'react';\n\nclass Form extends Component{\n\t//1. constructor\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tname:'',\n\t\t\tjob:''\n\t\t}\n\t}\n\n\t//2 hanlde \n\thandleChange = event =>{\n\t\t//debugger\n\t\tconst {name,value} = event.target;\n\t\tthis.setState({\n\t\t\t[name]:value   ///>??????\n\t\t});\n\t}\n\n\tsubmitForm = () =>{\n\t\tthis.props.handleSubmit(this.state);\n\t};\n\n\tcomponentWillReceiveProps(){\n\t\tconsole.log(666);\n\t};\n\n\trender(){\n\t\tconst {name,job} = this.state;\n\t\treturn (\n\t\t\t<form action=\"javascript:void(0)\">\n\t\t\t\t<label>Name:</label>\n\t\t\t\t<input type=\"text\" name=\"name\" value={name} onChange={this.handleChange}/>\n\t\t\t\t<label>Job:</label>\n\t\t\t\t<input type=\"text\" name=\"job\" value={job} onChange={this.handleChange}/>\n\t\t\t\t<button onClick={this.submitForm} >Submit</button>\n\t\t\t</form>\n\t\t);\n\t};\n}\n\nexport default Form;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Table from './Table'\nimport Form from './Form'\n\n\nclass App extends Component {\n  state = {\n    data:[\n           {\n              'name': 'Charlie',\n              'job': 'Janitor'\n          },\n          {\n              'name': 'Mac',\n              'job': 'Bouncer'\n          },\n          {\n              'name': 'Dee',\n              'job': 'Aspring actress'\n          },\n          {\n              'name': 'Dennis',\n              'job': 'Bartender'\n          }\n  ]};\n\n\n  removeRecord = index =>{\n    const {data} = this.state;\n    this.setState({\n      data:data.filter((row,i)=>{\n          return i!==index;\n      })\n    });\n  };\n\n  handleSubmit = people =>{\n    this.setState ({\n      data:[...this.state.data,people]\n    });\n  };\n\n\n  // componentDidMount(){\n  //   const url = 'https://en.wikipedia.org/w/api.php?action=opensearch&search=Seona+Dancing&format=json&origin=*';\n  //   fetch(url)\n  //     .then(result => result.json())\n  //     .then(result => {\n  //        this.setState({\n  //             data:result\n  //        });\n  //     });\n  // }\n\n  render() {\n    const {data} = this.state;\n    const wikiResult = data.map((val,index)=>{\n         return <li key={index}>{val.name}</li>;\n    });\n\n    return (\n      <div className=\"container\">\n        <h1>Hello,React! refresh automatically</h1>\n        <Table data={data}\n               removeRecord={this.removeRecord}/>\n        <Form handleSubmit={this.handleSubmit}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './custom.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}